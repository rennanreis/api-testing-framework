{
	"info": {
		"_postman_id": "e4d27c11-a73a-4873-b70f-9d0be8e0059b",
		"name": "SWAPI Tests",
		"description": "Tests for Star Wars API using Postman and Newman.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "673903"
	},
	"item": [
		{
			"name": "GET - People by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"homeworldUrl\", jsonData.homeworld);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/people/{{personId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"people",
						"{{personId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Planet by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains climate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.climate).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/planets/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"planets",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Film by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains director\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.director).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/films/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"films",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Film by Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/films/9999",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"films",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Planet by Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/planets/9999",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"planets",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": " GET â€“ Homeworld by URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.exist;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{homeworldUrl}}",
					"host": [
						"{{homeworldUrl}}"
					]
				}
			},
			"response": []
		}
	]
}